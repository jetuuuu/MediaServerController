// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Media
	MediaServerReq
	MediaServerRep
*/
package test

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Media_MediaType int32

const (
	Media_Audio Media_MediaType = 1
	Media_Video Media_MediaType = 2
)

var Media_MediaType_name = map[int32]string{
	1: "Audio",
	2: "Video",
}
var Media_MediaType_value = map[string]int32{
	"Audio": 1,
	"Video": 2,
}

func (x Media_MediaType) Enum() *Media_MediaType {
	p := new(Media_MediaType)
	*p = x
	return p
}
func (x Media_MediaType) String() string {
	return proto.EnumName(Media_MediaType_name, int32(x))
}
func (x *Media_MediaType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Media_MediaType_value, data, "Media_MediaType")
	if err != nil {
		return err
	}
	*x = Media_MediaType(value)
	return nil
}

type Media_MediaProtocol int32

const (
	Media_RTP_AVP   Media_MediaProtocol = 1
	Media_RTP_SAVP  Media_MediaProtocol = 2
	Media_RTP_AVPF  Media_MediaProtocol = 3
	Media_RTP_SAVPF Media_MediaProtocol = 4
)

var Media_MediaProtocol_name = map[int32]string{
	1: "RTP_AVP",
	2: "RTP_SAVP",
	3: "RTP_AVPF",
	4: "RTP_SAVPF",
}
var Media_MediaProtocol_value = map[string]int32{
	"RTP_AVP":   1,
	"RTP_SAVP":  2,
	"RTP_AVPF":  3,
	"RTP_SAVPF": 4,
}

func (x Media_MediaProtocol) Enum() *Media_MediaProtocol {
	p := new(Media_MediaProtocol)
	*p = x
	return p
}
func (x Media_MediaProtocol) String() string {
	return proto.EnumName(Media_MediaProtocol_name, int32(x))
}
func (x *Media_MediaProtocol) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Media_MediaProtocol_value, data, "Media_MediaProtocol")
	if err != nil {
		return err
	}
	*x = Media_MediaProtocol(value)
	return nil
}

type Media_MediaDirection int32

const (
	Media_Sendrecv Media_MediaDirection = 1
	Media_Recvonly Media_MediaDirection = 2
	Media_Sendonly Media_MediaDirection = 3
	Media_Inactive Media_MediaDirection = 4
)

var Media_MediaDirection_name = map[int32]string{
	1: "Sendrecv",
	2: "Recvonly",
	3: "Sendonly",
	4: "Inactive",
}
var Media_MediaDirection_value = map[string]int32{
	"Sendrecv": 1,
	"Recvonly": 2,
	"Sendonly": 3,
	"Inactive": 4,
}

func (x Media_MediaDirection) Enum() *Media_MediaDirection {
	p := new(Media_MediaDirection)
	*p = x
	return p
}
func (x Media_MediaDirection) String() string {
	return proto.EnumName(Media_MediaDirection_name, int32(x))
}
func (x *Media_MediaDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Media_MediaDirection_value, data, "Media_MediaDirection")
	if err != nil {
		return err
	}
	*x = Media_MediaDirection(value)
	return nil
}

type MediaServerReq_CommandType int32

const (
	MediaServerReq_CreateEndPoint      MediaServerReq_CommandType = 1
	MediaServerReq_GetEndPointMedia    MediaServerReq_CommandType = 2
	MediaServerReq_UpdateEndPointMedia MediaServerReq_CommandType = 3
	MediaServerReq_SendDTMF            MediaServerReq_CommandType = 4
	MediaServerReq_SetReceiver         MediaServerReq_CommandType = 5
	MediaServerReq_ResetReceiver       MediaServerReq_CommandType = 6
	MediaServerReq_DestroyObject       MediaServerReq_CommandType = 7
	MediaServerReq_CreatePlayer        MediaServerReq_CommandType = 8
	MediaServerReq_CreateRecorder      MediaServerReq_CommandType = 9
	MediaServerReq_CreateTranscoder    MediaServerReq_CommandType = 10
	MediaServerReq_CreateSRTP          MediaServerReq_CommandType = 11
	MediaServerReq_CreateMixer         MediaServerReq_CommandType = 12
	MediaServerReq_AttachToMixer       MediaServerReq_CommandType = 13
	MediaServerReq_DetachFromMixer     MediaServerReq_CommandType = 14
	MediaServerReq_CreateVideoMix      MediaServerReq_CommandType = 15
	MediaServerReq_AttachEndPoint      MediaServerReq_CommandType = 16
)

var MediaServerReq_CommandType_name = map[int32]string{
	1:  "CreateEndPoint",
	2:  "GetEndPointMedia",
	3:  "UpdateEndPointMedia",
	4:  "SendDTMF",
	5:  "SetReceiver",
	6:  "ResetReceiver",
	7:  "DestroyObject",
	8:  "CreatePlayer",
	9:  "CreateRecorder",
	10: "CreateTranscoder",
	11: "CreateSRTP",
	12: "CreateMixer",
	13: "AttachToMixer",
	14: "DetachFromMixer",
	15: "CreateVideoMix",
	16: "AttachEndPoint",
}
var MediaServerReq_CommandType_value = map[string]int32{
	"CreateEndPoint":      1,
	"GetEndPointMedia":    2,
	"UpdateEndPointMedia": 3,
	"SendDTMF":            4,
	"SetReceiver":         5,
	"ResetReceiver":       6,
	"DestroyObject":       7,
	"CreatePlayer":        8,
	"CreateRecorder":      9,
	"CreateTranscoder":    10,
	"CreateSRTP":          11,
	"CreateMixer":         12,
	"AttachToMixer":       13,
	"DetachFromMixer":     14,
	"CreateVideoMix":      15,
	"AttachEndPoint":      16,
}

func (x MediaServerReq_CommandType) Enum() *MediaServerReq_CommandType {
	p := new(MediaServerReq_CommandType)
	*p = x
	return p
}
func (x MediaServerReq_CommandType) String() string {
	return proto.EnumName(MediaServerReq_CommandType_name, int32(x))
}
func (x *MediaServerReq_CommandType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MediaServerReq_CommandType_value, data, "MediaServerReq_CommandType")
	if err != nil {
		return err
	}
	*x = MediaServerReq_CommandType(value)
	return nil
}

type MediaServerRep_Result int32

const (
	MediaServerRep_OK                  MediaServerRep_Result = 200
	MediaServerRep_NotFound            MediaServerRep_Result = 404
	MediaServerRep_InternalServerError MediaServerRep_Result = 500
	MediaServerRep_NotImplemented      MediaServerRep_Result = 501
)

var MediaServerRep_Result_name = map[int32]string{
	200: "OK",
	404: "NotFound",
	500: "InternalServerError",
	501: "NotImplemented",
}
var MediaServerRep_Result_value = map[string]int32{
	"OK":                  200,
	"NotFound":            404,
	"InternalServerError": 500,
	"NotImplemented":      501,
}

func (x MediaServerRep_Result) Enum() *MediaServerRep_Result {
	p := new(MediaServerRep_Result)
	*p = x
	return p
}
func (x MediaServerRep_Result) String() string {
	return proto.EnumName(MediaServerRep_Result_name, int32(x))
}
func (x *MediaServerRep_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MediaServerRep_Result_value, data, "MediaServerRep_Result")
	if err != nil {
		return err
	}
	*x = MediaServerRep_Result(value)
	return nil
}

type Media struct {
	Media            *Media_MediaType      `protobuf:"varint,1,req,name=media,enum=test.Media_MediaType,def=1" json:"media,omitempty"`
	Ip               *string               `protobuf:"bytes,2,req,name=ip" json:"ip,omitempty"`
	Protocol         *Media_MediaProtocol  `protobuf:"varint,3,req,name=protocol,enum=test.Media_MediaProtocol" json:"protocol,omitempty"`
	Direction        *Media_MediaDirection `protobuf:"varint,4,opt,name=direction,enum=test.Media_MediaDirection,def=1" json:"direction,omitempty"`
	CodecList        []*Media_Codec        `protobuf:"bytes,6,rep,name=codecList" json:"codecList,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}

const Default_Media_Media Media_MediaType = Media_Audio
const Default_Media_Direction Media_MediaDirection = Media_Sendrecv

func (m *Media) GetMedia() Media_MediaType {
	if m != nil && m.Media != nil {
		return *m.Media
	}
	return Default_Media_Media
}

func (m *Media) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Media) GetProtocol() Media_MediaProtocol {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return Media_RTP_AVP
}

func (m *Media) GetDirection() Media_MediaDirection {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return Default_Media_Direction
}

func (m *Media) GetCodecList() []*Media_Codec {
	if m != nil {
		return m.CodecList
	}
	return nil
}

type Media_Codec struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Format           *string `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Media_Codec) Reset()         { *m = Media_Codec{} }
func (m *Media_Codec) String() string { return proto.CompactTextString(m) }
func (*Media_Codec) ProtoMessage()    {}

func (m *Media_Codec) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Media_Codec) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Media_Codec) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

type MediaServerReq struct {
	Command          *MediaServerReq_CommandType `protobuf:"varint,1,req,name=command,enum=test.MediaServerReq_CommandType" json:"command,omitempty"`
	Id               *string                     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Media            *Media                      `protobuf:"bytes,3,opt,name=media" json:"media,omitempty"`
	Params           []string                    `protobuf:"bytes,4,rep,name=params" json:"params,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *MediaServerReq) Reset()         { *m = MediaServerReq{} }
func (m *MediaServerReq) String() string { return proto.CompactTextString(m) }
func (*MediaServerReq) ProtoMessage()    {}

func (m *MediaServerReq) GetCommand() MediaServerReq_CommandType {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return MediaServerReq_CreateEndPoint
}

func (m *MediaServerReq) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MediaServerReq) GetMedia() *Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *MediaServerReq) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type MediaServerRep struct {
	Res              *MediaServerRep_Result `protobuf:"varint,1,req,name=res,enum=test.MediaServerRep_Result" json:"res,omitempty"`
	Id               *string                `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Media            *Media                 `protobuf:"bytes,3,opt,name=media" json:"media,omitempty"`
	Description      *string                `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *MediaServerRep) Reset()         { *m = MediaServerRep{} }
func (m *MediaServerRep) String() string { return proto.CompactTextString(m) }
func (*MediaServerRep) ProtoMessage()    {}

func (m *MediaServerRep) GetRes() MediaServerRep_Result {
	if m != nil && m.Res != nil {
		return *m.Res
	}
	return MediaServerRep_OK
}

func (m *MediaServerRep) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MediaServerRep) GetMedia() *Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *MediaServerRep) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func init() {
	proto.RegisterEnum("test.Media_MediaType", Media_MediaType_name, Media_MediaType_value)
	proto.RegisterEnum("test.Media_MediaProtocol", Media_MediaProtocol_name, Media_MediaProtocol_value)
	proto.RegisterEnum("test.Media_MediaDirection", Media_MediaDirection_name, Media_MediaDirection_value)
	proto.RegisterEnum("test.MediaServerReq_CommandType", MediaServerReq_CommandType_name, MediaServerReq_CommandType_value)
	proto.RegisterEnum("test.MediaServerRep_Result", MediaServerRep_Result_name, MediaServerRep_Result_value)
}
